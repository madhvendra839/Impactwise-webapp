{"ast":null,"code":"import*as React from'react';import'./hamburgerdrawer.css';import Box from'@mui/material/Box';import SwipeableDrawer from'@mui/material/SwipeableDrawer';import Button from'@mui/material/Button';import List from'@mui/material/List';import Divider from'@mui/material/Divider';import ListItem from'@mui/material/ListItem';import ListItemButton from'@mui/material/ListItemButton';import ListItemIcon from'@mui/material/ListItemIcon';import ListItemText from'@mui/material/ListItemText';import InboxIcon from'@mui/icons-material/MoveToInbox';import MailIcon from'@mui/icons-material/Mail';import MenuIcon from'@mui/icons-material/Menu';import{ThemeProvider,createTheme}from'@mui/material/styles';import CssBaseline from'@mui/material/CssBaseline';import categories from'../data/category';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function HamburgerDrawer(_ref){let{setCategory}=_ref;const[state,setState]=React.useState({left:false});const toggleDrawer=(anchor,open)=>event=>{if(event&&event.type==='keydown'&&(event.key==='Tab'||event.key==='Shift')){return;}setState({...state,[anchor]:open});};const darkTheme=createTheme({palette:{mode:'light'}});const list=anchor=>/*#__PURE__*/_jsxs(Box,{sx:{width:250},role:\"presentation\",onClick:toggleDrawer(anchor,false),onKeyDown:toggleDrawer(anchor,false),children:[/*#__PURE__*/_jsx(List,{children:/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(\"p\",{className:\"cate\",children:\" CATEGORIES \"})})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(List,{children:categories.map((text,index)=>/*#__PURE__*/_jsx(ListItem,{onClick:()=>setCategory(text),children:/*#__PURE__*/_jsx(ListItemButton,{children:/*#__PURE__*/_jsxs(\"p\",{className:\"list\",children:[\"  \",/*#__PURE__*/_jsx(ListItemText,{primary:text}),\" \"]})})},text))})]});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:toggleDrawer('left',true),children:/*#__PURE__*/_jsx(MenuIcon,{})}),/*#__PURE__*/_jsx(ThemeProvider,{theme:darkTheme,children:/*#__PURE__*/_jsx(SwipeableDrawer,{anchor:'left',open:state['left'],onClose:toggleDrawer('left',false),onOpen:toggleDrawer('left',true),children:list('left')})})]},'left')});}","map":{"version":3,"names":["React","Box","SwipeableDrawer","Button","List","Divider","ListItem","ListItemButton","ListItemIcon","ListItemText","InboxIcon","MailIcon","MenuIcon","ThemeProvider","createTheme","CssBaseline","categories","jsx","_jsx","jsxs","_jsxs","HamburgerDrawer","_ref","setCategory","state","setState","useState","left","toggleDrawer","anchor","open","event","type","key","darkTheme","palette","mode","list","sx","width","role","onClick","onKeyDown","children","className","map","text","index","primary","Fragment","theme","onClose","onOpen"],"sources":["C:/Users/madhv/OneDrive/Desktop/inshortsClone/src/components/HamburgerDrawer.js"],"sourcesContent":["import * as React from 'react';\r\nimport './hamburgerdrawer.css'\r\nimport Box from '@mui/material/Box';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport categories from '../data/category';\r\n\r\nexport default function HamburgerDrawer({setCategory}) {\r\n  const [state, setState] = React.useState({\r\n    left: false\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      mode: 'light',\r\n    },\r\n  });\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n          <ListItem>\r\n           <p className=\"cate\"> CATEGORIES </p>\r\n          </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {categories.map((text, index) => (\r\n          <ListItem key={text} onClick={()=>setCategory(text)}>\r\n            <ListItemButton>\r\n            <p  className='list'>  <ListItemText primary={text} /> </p>\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <div  >\r\n        <React.Fragment key={'left'}>\r\n          <Button onClick={toggleDrawer('left', true)}><MenuIcon /></Button>\r\n          <ThemeProvider theme={darkTheme}>\r\n          <SwipeableDrawer \r\n            anchor={'left'}\r\n            open={state['left']}\r\n            onClose={toggleDrawer('left', false)}\r\n            onOpen={toggleDrawer('left', true)}\r\n          >\r\n            {list('left')}\r\n          </SwipeableDrawer>\r\n          </ThemeProvider>\r\n        </React.Fragment>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}